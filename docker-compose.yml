version: '3.2'

services:
#  elasticsearch_master:
#    build:
#      context: elasticsearch/
#    ports:
#      - 9200:9200
#      - 9300:9300
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - type: bind
#        source: ./elasticsearch/config/master.yml
#        target: /usr/share/elasticsearch/config/elasticsearch.yml
#        read_only: true
#      - type: volume
#        source: elasticsearch_master
#        target: /usr/share/elasticsearch/data
#    networks:
#      - elk
#  elasticsearch_slave:
#    image: elasticsearch:7.1.1
#    ## Deploy will only work in a Docker swarm:
#    ## use: `docker stack deploy` instead of docker-compose
#    # deploy:
#    #  replicas: 2
#    volumes:
#        - type: bind
#          source: ./elasticsearch/config/slave.yml
#          target: /usr/share/elasticsearch/config/elasticsearch.yml
#          read_only: true
#        - type: volume
#          source: elasticsearch_slave
#          target: /usr/share/elasticsearch/data
#    networks:
#      - elk
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  elasticsearch:
    build:
      context: elasticsearch/
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
    networks:
      - elk

  logstash:
    build:
      context: logstash/
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  metricbeat:
    build:
      context: metricbeat/
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: /
        target: /hostfs
        read_only: true
      - type: bind
        source: ./metricbeat/config/metricbeat.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
    networks:
      - elk
    depends_on:
      - elasticsearch

  packetbeat:
    build:
      context: packetbeat/
    volumes:
      - type: bind
        source: ./packetbeat/config/packetbeat.yml
        target: /usr/share/packetbeat/packetbeat.yml
        read_only: true
#    networks:
#      - elk
    network_mode: "host"
    depends_on:
      - elasticsearch
    cap_add:
      - NET_ADMIN
      - NET_RAW


networks:
  elk:
    driver: bridge
    # This to allow packetbeat to capture host traffic
#    external: true

volumes:
  elasticsearch:
  # elasticsearch_master:
  # elasticsearch_slave:
